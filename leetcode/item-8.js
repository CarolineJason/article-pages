// https://leetcode.cn/problems/maximum-subarray/
// 最大子数组和
// 思想：用动态规划的思想
// 1. 首先对数组进行遍历，定义变量当前最大连续子序列的和sum和结果值result
// 2. 如果sum > 0，则有增益效果，sum保留并加到当前值上
// 3. 如果sum <= 0，则有减益效果，需要舍弃，sum替换为当前值
// 4. 比较result和sum值，最大值为最大连续子序列。

// 思想：最原始的动态规划思想
// dp[i] 表示以nums[i]为结尾的最大连续子数组的和
// 判断dp[i - 1];
// 如果dp[i - 1] <= 0（减益效果），则直接以num为dp[i]
// 如果dp[i - 1] > 0（增益效果），dp[i] = dp[i - 1] + num